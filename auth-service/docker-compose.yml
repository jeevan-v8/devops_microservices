services:
  # API Database
  postgres-auth:
    image: postgres
    restart: always
    container_name: postgres-auth
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  auth-service:
    image: auth-service
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    environment:
      - ENV=${ENV}
      - PORT=${PORT}
      - DSN=postgresql://${DB_USER}:${DB_PASSWORD}@postgres-auth:5432/${DB_NAME}?sslmode=disable
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SENDER=${SMTP_SENDER}
    depends_on:
      - postgres-auth

  note-service:
    image: notes-service
    restart: always
    container_name: notes-service
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres-auth:5432/${DB_NAME}
    depends_on:
      - postgres-auth
      - auth-service
    ports:
      - "3001:3001"

  frontend:
    image: frontend
    restart: always
    container_name: frontend
    depends_on:
      - postgres-auth
      - auth-service
    ports:
      - "3002:3000"


volumes:
  postgres:
